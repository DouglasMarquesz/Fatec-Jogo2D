unit uPrincipal;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.StdCtrls, FMX.Controls.Presentation, FMX.Layouts, FMX.MultiView;

type
  TFPrincipal = class(TForm)
    recFundo: TRectangle;
    layTitulo: TLayout;
    btnMenu: TButton;
    lblScore: TLabel;
    lblTitulo: TLabel;
    lblX: TLabel;
    lblFase: TLabel;
    layConteudo: TLayout;
    layControles: TLayout;
    recPecaBorda: TRectangle;
    recPeca: TRectangle;
    recPecaFundo: TRectangle;
    lblPecaValor: TLabel;
    recProximaPecaBorda: TRectangle;
    recProximaPeca: TRectangle;
    recProximaPecaFundo: TRectangle;
    lblProximaPeca: TLabel;
    layBomba: TLayout;
    recBomba: TRectangle;
    pthBomba: TPath;
    lblBomba: TLabel;
    layPalco: TLayout;
    layTrilha1: TLayout;
    Rectangle1: TRectangle;
    layTrilha2: TLayout;
    Rectangle2: TRectangle;
    layTrilha3: TLayout;
    Rectangle3: TRectangle;
    layTrilha4: TLayout;
    Rectangle4: TRectangle;
    layTrilha5: TLayout;
    Rectangle5: TRectangle;
    MultiView1: TMultiView;
    Layout1: TLayout;
    Circle1: TCircle;
    Layout2: TLayout;
    Label2: TLabel;
    btLevel3: TSpeedButton;
    btLevel2: TSpeedButton;
    btLevel1: TSpeedButton;
    Line1: TLine;
    btRecords: TSpeedButton;
    btSavarJogo: TSpeedButton;
    btNovoJogo: TSpeedButton;
    lblDuracaoAnime: TLabel;
    tkbDuracaoAnime: TTrackBar;
    Label1: TLabel;
    Line2: TLine;
    procedure FormCreate(Sender: TObject);
    procedure layTrilha1DblClick(Sender: TObject);
    procedure tkbDuracaoAnimeChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function GerarValor(Limite: Integer): Single;
    procedure RealocarPalco;
    function FimJogo: Boolean;
  end;

var
  FPrincipal: TFPrincipal;
  Placar: Double;

implementation

Uses GameClasses, Math;

{$R *.fmx}


//FIM DE JOGO
function TFprincipal.FimJogo: Boolean;
var
  Peca1, Peca2, Peca3, Peca4, Peca5: TRectangle;
begin
  Result := False;

  Peca1 := TRectangle(layTrilha1.Children[layTrilha1.ChildrenCount-1]);
  Peca2 := TRectangle(layTrilha2.Children[layTrilha2.ChildrenCount-1]);
  Peca3 := TRectangle(layTrilha3.Children[layTrilha3.ChildrenCount-1]);
  Peca4 := TRectangle(layTrilha4.Children[layTrilha4.ChildrenCount-1]);
  Peca5 := TRectangle(layTrilha5.Children[layTrilha5.ChildrenCount-1]);
end;


//AO CRIAR FORMULÁRIO FAÇA:
procedure TFPrincipal.FormCreate(Sender: TObject);
begin
  //Reiniciar placar
  Placar := 0;
  lblScore.Text := Format('%f', [Placar]);

  //'Gravar tempo das animações
  AniTime := TkbDuracaoAnime.Value;

  //Gerar valores
  recPeca.Value := GerarValor(7);
  recProximapeca.Value  := GerarValor(7);
end;

function TFprincipal.GerarValor(Limite: Integer): Single;
Begin
  //Calcular
  Result := Math.Power(2, RandomRange(1, Limite));
End;


//PROCEDIMENTO DE DUPLO CLIQUE
procedure TFPrincipal.layTrilha1DblClick(Sender: TObject);
var
  LPeca : TRectangle;
  LTrilha : TLayout;
  I: Integer;
begin
  LTrilha := TLayout(Sender);
  LPeca := TRectangle(recPeca.Clone(Self));
  LPeca.Parent := LTrilha;
  LPeca.Align := TAlignLayout.None;
  LPeca.Position.Y := LTrilha.Height + 70;
  recPeca.Value	 := recProximaPeca.Value;
  recProximaPeca.Value  := GerarValor(7);

  TAnimation.Animate(LPeca, 'Position.Y', ((LPeca.Line-1)*(LPeca.Height+5)), ANITIME)
    .AnimeType(TAnimationType.Out)
    .AnimeInterpolation(TInterpolationType.Quadratic)

    .AnimeFinish(
      procedure (Sender: TObject) var R:Integer; Begin
        Placar := Placar + Lpeca.CheckHit(
          Procedure begin
            RealocarPalco;
          end);
          RealocarPalco;
        lblScore.Text  := Format('%f', [Placar]);
      End)

    .Start;
end;


//ALTERAR VALOR DE VELOCIDADE DE ANIMAÇÕES
procedure TFPrincipal.tkbDuracaoAnimeChange(Sender: TObject);
begin
  lblDuracaoAnime.Text := Format('%2.f S', [tkbDuracaoAnime.Value]);
  AniTime := TkbDuracaoAnime.Value;
end;

//CORRIGIR BUG DE COMBO
procedure TFPrincipal.RealocarPalco;
var
  Lpeca: TRectangle;
  I: Integer;
Begin
  for I := 1 to layTrilha1.ChildrenCount-1 do begin
    LPeca := TRectangle(layTrilha1.Children[I]);
    if not (csDestroying in LPeca.ComponentState) then
      LPeca.Position.Y := ((LPeca.Line-1)*(LPeca.Height+5));
  end;

  for I := 1 to layTrilha2.ChildrenCount-1 do begin
    LPeca := TRectangle(layTrilha2.Children[I]);
    if not (csDestroying in LPeca.ComponentState) then
      LPeca.Position.Y := ((LPeca.Line-1)*(LPeca.Height+5));
  end;

  for I := 1 to layTrilha3.ChildrenCount-1 do begin
    LPeca := TRectangle(layTrilha3.Children[I]);
    if not (csDestroying in LPeca.ComponentState) then
      LPeca.Position.Y := ((LPeca.Line-1)*(LPeca.Height+5));
  end;

  for I := 1 to layTrilha4.ChildrenCount-1 do begin
    LPeca := TRectangle(layTrilha4.Children[I]);
    if not (csDestroying in LPeca.ComponentState) then
      LPeca.Position.Y := ((LPeca.Line-1)*(LPeca.Height+5));
  end;

  for I := 1 to layTrilha5.ChildrenCount-1 do begin
    LPeca := TRectangle(layTrilha5.Children[I]);
    if not (csDestroying in LPeca.ComponentState) then
      LPeca.Position.Y := ((LPeca.Line-1)*(LPeca.Height+5));
  end;
End;

end.
